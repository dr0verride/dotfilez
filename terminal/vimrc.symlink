" First load plugins
call plug#begin()

Plug 'tpope/vim-sensible'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/syntastic'
Plug 'rking/ag.vim'

Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" Syntax highighting 
Plug 'groenewege/vim-less', { 'for': 'less' }
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown', { 'for': 'markdown' }


" Probably good.
Plug 'Raimondi/delimitMate'
Plug 'tpope/vim-surround'


" Futures?
" https://github.com/ervandew/supertab
" https://github.com/Raimondi/delimitMate
" https://github.com/Valloric/YouCompleteMe
" https://github.com/bling/vim-airline
" https://github.com/tpope/vim-fugitive
" https://github.com/sjl/gundo.vim
" https://github.com/tmhedberg/matchit
" https://github.com/Lokaltog/vim-easymotion
" https://github.com/garbas/vim-snipmate
" https://github.com/wincent/Command-T
" https://github.com/tpope/vim-rails
" https://github.com/tpope/vim-commentary
" https://github.com/tpope/vim-repeat


" Themes
" https://github.com/chriskempson/base16
call plug#end()
autocmd BufNewFile,BufReadPost *.md set filetype=markdown
set hidden

" ctrl-p
let g:ctrlp_map = '<c-p>'
let g:ctrlp_show_hidden = 1

" Nerd Tree
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

syntax on
colorscheme flatland
set expandtab
set backspace=indent,eol,start
set autoindent
set copyindent
set shiftwidth=2
set tabstop=2
set nowrap
set shiftround
set number
set ignorecase
set smartcase
set smarttab
set hlsearch
set incsearch
set history=1000
set undolevels=1000
set wildignore=*.swp,*.bak,*.dump,*.dmp,*.class
set visualbell
set noerrorbells

set nobackup
set noswapfile

"Support clipboard
if $TMUX == ''
    set clipboard+=unnamed
endif

" Leader Keys
let mapleader=" "
nnoremap <Space> <Nop>

function! ToggleNERDTreeAndTagbar()
    let w:jumpbacktohere = 1

    " Detect which plugins are open
    if exists('t:NERDTreeBufName')
        let nerdtree_open = bufwinnr(t:NERDTreeBufName) != -1
    else
        let nerdtree_open = 0
    endif
    let tagbar_open = bufwinnr('__Tagbar__') != -1

    " Perform the appropriate action
    if nerdtree_open && tagbar_open
        NERDTreeClose
        TagbarClose
    elseif nerdtree_open
        TagbarOpen
    elseif tagbar_open
        NERDTree
    else
        NERDTree
        TagbarOpen
    endif

    " Jump back to the original window
    for window in range(1, winnr('$'))
        execute window . 'wincmd w'
        if exists('w:jumpbacktohere')
            unlet w:jumpbacktohere
            break
        endif
    endfor
endfunction

nnoremap <Leader>\ :NERDTreeToggle<CR>

